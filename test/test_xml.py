# Copyright (C) 2021 Intel Corporation
# SPDX-License-Identifier: GPL-3.0-or-later


import os

import pytest

from cve_bin_tool.sbom_manager import SBOMManager


class TestXML:
    """This class contains some tests of badly formatted XML data"""

    def test_xml_dos(self):
        """Run some XML code designed to cause a denial of service through excessive processing requirements.
        This should be handled correctly thanks to defusedxml.  This test will return no results upon success.
        If the test fails, the whole test suite would hang"""

        test_file = os.path.join(
            os.path.abspath(os.path.dirname(__file__)), "xml", "xml_dos.xml"
        )
        sbom_engine = SBOMManager(test_file)
        assert sbom_engine.scan_file() == {}

    def test_xml_invalid(self):
        """Run on invalid XML.  At this time it should simply return no results.  In future we may expect it
        to print an error in debug mode"""
        test_file = os.path.join(
            os.path.abspath(os.path.dirname(__file__)), "xml", "xml_invalid.xml"
        )
        sbom_engine = SBOMManager(test_file)
        assert sbom_engine.scan_file() == {}

    def test_xml_external(self):
        """Run on XML that includes external entities that we should not expand.  At this time, both files should
        return no results.  We may want to print a warning message in debug mode in future."""

        # This one is a windows-based version
        test_file = os.path.join(
            os.path.abspath(os.path.dirname(__file__)),
            "xml",
            "xml_external_entity_disclosure1.xml",
        )
        sbom_engine = SBOMManager(test_file)
        assert sbom_engine.scan_file() == {}

        # This one is a linux-based version
        test_file = os.path.join(
            os.path.abspath(os.path.dirname(__file__)),
            "xml",
            "xml_external_entity_disclosure2.xml",
        )
        sbom_engine = SBOMManager(test_file)
        assert sbom_engine.scan_file() == {}
